<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="fr" lang="fr">
<head>
<title>Niveau des nappes</title>
<meta name="author" content="Titi Productions" />
<meta name="description" content="Evolution du niveau des nappes dans ma commune" />
<meta name="keywords" content="quantité, eau, nappe, aquifère, nappe d'eau, nappe d'eau souterraine, eau souterraine, niveau, hauteur, profondeur, Hub'Eau, HubEau, Bd-Lisa, évolution, commune, France" />
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<meta http-equiv="Content-Language" content="fr" />

<script src="js/dept.js"></script>
<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
<script src="https://code.highcharts.com/stock/highstock.js"></script>
<script src="https://code.highcharts.com/stock/modules/exporting.js"></script>
<script src="https://code.highcharts.com/stock/modules/export-data.js"></script>
<script src="https://code.highcharts.com/stock/modules/data.js"></script>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-103689621-1', 'auto');
  ga('send', 'pageview');
</script>
<script language="JavaScript" type="text/javascript">
// 2019-07-18 version javascript
// si on déclare une variable avec var, elle sera de portée locale. sans var -> portée globale
/**
 * Fonction de récupération des paramètres GET de la page
 * @return Array Tableau associatif contenant les paramètres GET
 */
function extractUrlParams(){	
	var t = location.search.substring(1).split('&');
	var f = [];
	for (var i=0; i<t.length; i++){
		var x = t[ i ].split('=');
		f[x[0]]=x[1];
	}
	return f;
}	

	function changeDpt() {
	/*
		s = 'piezo.htm?code_dpt=' + document.getElementById('code_dpt').value;
		if (npt > 0) {
			s += '&code_bss=' + code_bss;
		}
		self.location = s;
	*/
	code_dpt = document.getElementById('code_dpt').value;
	remplitDpt();
	remplitPiezo();
	}	

function remplitDpt() {
	var s = '';
	ksort(dpt);
	for(var key in dpt)
	{
		var value = dpt[key];
		s = s + '<option ';
		if (code_dpt == key){ s = s +' selected="selected"'; }  
		s = s + ' value="' + key + '">' + key + ' - ' + value + '</option>';
	}
	var di = document.getElementById('code_dpt'); 
	di.innerHTML = '';
	di.insertAdjacentHTML('beforeend', s);
}	

function remplitPiezo() {
		var size = 8000;
		laty = new Array();
		longx = new Array();
		code_comm = new Array();
		code_dept = new Array();
		nom_comm = new Array();
		periode = new Array();
		nappes = new Array();
		var rep = JSON.parse(ajaxGet("https://hubeau.eaufrance.fr/api/v1/niveaux_nappes/stations?size=" + size + "&format=json"));
			//var rep = JSON.parse(reponse);
			var nbsta = rep.count;
			console.log(nbsta);
			var data = rep.data;
			//console.table(data);
			for (var i = 0; i < nbsta; i++) {
				code_commune = data[i]['code_commune_insee'];
				if (code_commune < '97000') {
					code_departement = code_commune.substring(0, 2);
				} else {
					code_departement = code_commune.substring(0, 3);
				}	
				// ne récupérer que les éléments qui ont valeur de code_dept[]=code_dpt  (soient les piézos qui sont dans le département sélectionné)
				// sauf nom_comm et nappes qui servent dans le tableau
						nom_comm[data[i]['code_bss']] = data[i]['nom_commune']; // encodeURI(
						//console.log("i="+i+" bss="+data[i]['code_bss']+" bdlisa="+data[i]['codes_bdlisa']);
						if (data[i]['codes_bdlisa'] !== null) {
							nappes[data[i]['code_bss']] = data[i]['codes_bdlisa'][0]; // URL fiche BDLISA = https://bdlisa.eaufrance.fr/hydrogeounit/<code_bdlisa>
						} else {
							nappes[data[i]['code_bss']] = '';
						}	
				if (code_departement == code_dpt) {
					codebss = data[i]['code_bss'];
					if (data[i]['date_debut_mesure'] !== null) { // éliminer les piézos qui n'ont pas de mesure
						periode[codebss] = data[i]['date_debut_mesure'].substring(0,4) + ' - ' + data[i]['date_fin_mesure'].substring(0,4);
						laty[codebss] = data[i]['y'];
						longx[codebss] = data[i]['x'];
						code_comm[codebss] = code_commune;
						code_dept[codebss] = code_departement;
						//console.log(nom_comm[codebss]);
					}
				}	
			}
			//console.table(nom_comm);

			ksort(code_dept); // classe le tableau selon les codes bss
			var s = '';
			for(var key in code_dept) {
				s = s +'<option '; 
				if (code_bss == key) { s = s + ' selected="selected"'; }  
				s = s + ' value="' + key + '">' + key + ' à ' + nom_comm[key] + ' (' + periode[key] + ')</option>';
			}
			var dd = document.getElementById('form2'); 
			dd.innerHTML = '';
			dd.insertAdjacentHTML('beforeend', '<input type="hidden" name="code_dpt" id="code_dpt" value="' + code_dpt + '">');
			var d = document.getElementById('code_bss'); 
			d.innerHTML = '';
			d.insertAdjacentHTML('beforeend', s);
}
	
function ligne_tableau(ipt) {
		lien_suppr = '<a onclick="supprPiezo(' + ipt + ');"title="Supprime le piézomètre">Supprimer</a>';
		var st = '';
		st = st + '	<tr id="tr'+ ipt + '"><td><a href="https://ades.eaufrance.fr/Fiche/PtEau?Code=' + code_bss[ipt] + '" target="_blank">' + code_bss[ipt] + '</a></td><td>' + nom_comm[code_bss[ipt]] + '</td><td align="right">' + jsondata.length + '</td><td>';
		st = st + date_min[ipt] + '</td><td>' + date_max[ipt]; 
		st = st + '</td><td align="right">' + Intl.NumberFormat("en-IN", {maximumFractionDigits: 2, minimumFractionDigits: 2}).format(niv_min[ipt]);
		st = st + '</td><td align="right">' + Intl.NumberFormat("en-IN", {maximumFractionDigits: 2, minimumFractionDigits: 2}).format(niv_max[ipt]);
		st = st + '</td><td align="right"><a href="https://bdlisa.eaufrance.fr/hydrogeounit/' + nappes[code_bss[ipt]] + '" target="_blank">' + nappes[code_bss[ipt]] + '</a></td><td>'; // 1ere nappe pour l'instant
		st = st + lien_suppr + '</td></tr>'; 
		var dt = document.getElementById('tableau'); 
		dt.insertAdjacentHTML('beforeend', st);
		//dt.innerHTML = st;
}	
	
function donnees_piezo(ipt) {
		jsondata = new Array();
		processed_json = new Array();   
		console.log("code_bss ds fonction graphique = " + code_bss[ipt]);
		var url = "https://hubeau.eaufrance.fr/api/v1/niveaux_nappes/chroniques?code_bss=" + code_bss[ipt] + "&size=" + size + "&fields=date_mesure,niveau_nappe_eau&sort=asc"; 
		// timestamp_mesure est null si passé en fields, mais pas date_mesure
		var rep = JSON.parse(ajaxGet(url)); 
		//ecritLog("URL appelée pour la chronique = " + url);
		jsondata = rep.data;
		console.log(jsondata.length);
		//ecritLog("Nombre de mesures piézo = "  + jsondata.length);
		
		date_min[ipt] = jsondata[0]['date_mesure'];
		date_max[ipt] = jsondata[jsondata.length-1]['date_mesure'];
		niv_min[ipt] = 5000;
		niv_max[ipt] = -1000;
		for(var key in jsondata) {
			jsondata[key]['date_mesure'] = Date.parse(jsondata[key]['date_mesure']);
			niv = jsondata[key]['niveau_nappe_eau'];
			processed_json.push([jsondata[key]['date_mesure'], niv]);
			if (niv < niv_min[ipt]) { niv_min[ipt] = niv; }
			if (niv > niv_max[ipt]) { niv_max[ipt] = niv; }
		}
		myChart.addSeries({
			name: code_bss[ipt],
			colorIndex: ipt,
			data: processed_json
		});

		//console.table(processed_json); 
		ligne_tableau(ipt);
}	

function urlPage() {
			var base = window.location.href.split('?');
			var u = document.getElementById('urlget'); 
			su = '<p>Les mesures piézométriques sont récupérées via <a href="https://hubeau.eaufrance.fr/page/api-piezometrie" target="_blank">l\'API "Piézométrie"</a> de <a href="http://hubeau.eaufrance.fr/" target="_blank">Hub\'Eau</a>.';
			su += '<br>URL pour générer directement ce graphique : ';
			var url = base[0] +'?code_bss=';
			for (var i = 0; i < npt; i++) {
				url += code_bss[i];
				if (i < npt-1) { url += ','; }
			}		
			su += '<a href="' + url + '">' + url + '</a></p>'; 
			//console.log(su);
			u.innerHTML = su;
}
	
function ajoutePiezo() {
	if (npt < 1) { // il n'y a pas encore de piézo, document.getElementById("code_bss") est inconnu
		var selectForm = document.getElementById("form2");
		selectForm.submit();
		//var selectBox = document.getElementById("code_bss");
		//console.log(selectBox);
		//var selectedValue = selectBox.options[selectBox.selectedIndex].value;
		//console.log(selectedValue);
	}
	npt++;
	console.log("npt="+npt);
	code_bss[npt-1] = document.getElementById('code_bss').value;
	donnees_piezo(npt-1);
	urlPage();
}	

function supprPiezo(ipt) {
	myChart.series[ipt].remove(true, true); // il faut recharger le graphique sinon périodes de temps incohérentes
	// enlever élement ipt du tableau code_bss, puis décaler les éléments suivants
	console.table("avant: " + code_bss);
	var dummy = code_bss.splice(ipt, 1);
	console.table("après: " + code_bss);
	var ligne = document.getElementById('tr' + ipt);
	ligne.innerHTML=''; // Ok mais les lignes id tr du tableau sont décalées pour les suppressions suivantes -> il faut rafraîchir le tableau entier
	var dummy = date_min.splice(ipt, 1);
	var dummy = date_max.splice(ipt, 1);
	var dummy = niv_min.splice(ipt, 1);
	var dummy = niv_max.splice(ipt, 1);
	npt--;
	var dt = document.getElementById('tableau'); 
	dt.innerHTML='<TABLE id="tableau" COLS="8" BORDER="1" CELLPADDING="3" CELLSPACING="0">' + 
	  '<tr><th>Code BSS</th><th>Commune</th><th align="right">Nb Mesures</th><th>Début</th><th>Fin</th><th align="right">Niveau mini</th><th align="right">Niveau maxi</th><th>Code entité hydrogéol.</th><th>Action</th></tr></TABLE>';
	for (var i = 0; i < npt; i++) {
		ligne_tableau(i);
	}		
	urlPage();
}	
	
// Appel AJAX synchrone, contrairement à plouf
function ajaxGet(url) {
    var req = new XMLHttpRequest();
    req.open("GET", url, false);
    req.send(null);
    if (req.status >= 200 && req.status < 400) {
            return req.responseText;
    } else {
            console.error(req.status + " " + req.statusText + " " + url);
    }
}

function ksort(ob) {            
  var k = Object.keys(ob)
  var cl = {}
  for(var i in ob) {
    cl[i] = ob[i]
    delete ob[i]
  }
  k.sort();
  for(var i = 0;i < k.length; i++) {
    ob[ k[i] ] = cl[ k[i] ]; 
  }
} 	

function replaceAll(recherche, remplacement, chaineAModifier) {
	// remplace toutes les occurences d'une chaine contrairement à la méthode string.replace()
	return chaineAModifier.split(recherche).join(remplacement);
}

function graphique(il, grandeur_hydro, titre_graph) {
//document.addEventListener('DOMContentLoaded', function () {
	myChart = Highcharts.stockChart('container', {
		chart: {
				type: 'scatter',
				backgroundColor: {
					linearGradient: [0, 0, 500, 500],
					stops: [
						[0, 'rgb(255, 255, 255)'],
						[1, 'rgb(246, 241, 252)']
					]
				},
				borderColor: '#EBBA95',
				borderWidth: 2,
				marginRight: 20				
			},
		plotOptions: {
			scatter: {
				lineWidth: 1, 
				marker: {
					radius: 3,
					enabled: false
				},
				tooltip: {
					formatter: function() {
                        return ''+ Highcharts.dateFormat('%e. %b %Y, %H:00', this.x) +': '+ this.y +' m NGF';
					}
					//xDateFormat: '%Y-%m-%d',
					//valueDecimals: 2
				}
			}
		},
		legend: {
			backgroundColor: '#FFFFFF',
			enabled: true,
			verticalAlign: 'top',
			y: 0, //70,
			align: 'center', //'left',
			backgroundColor: 'lightgray',
			borderColor: 'black',
			borderWidth: 1,
			layout: 'horizontal', //'vertical',
			shadow: true
		},
		rangeSelector: {
		  buttons: [{
			type: 'day',
			count: 1,
			text: '1jour'
			}, {
			type: 'month',
			count: 1,
			text: '1mois'
			}, {
			type: 'year',
			count: 1,
			text: '1an'
			}, {
			type: 'year',
			count: 10,
			text: '10ans'
			}, {
			type: 'all',
			text: 'Tout'
		  }]
		},
		title: {
			text: 'Niveau NGF de la nappe (m)'
		},
		xAxis: {
			type: 'datetime',
			visible: true
		},
		yAxis: {
			opposite: false,
			labels: {
				align: 'right'
			}
		},
		series: []
	});
//});

	niv_min = new Array();
	niv_max = new Array();
	date_min = new Array();
	date_max = new Array();
	size = 20000;
	for (ipt = 0; ipt < npt; ipt++) {
		donnees_piezo(ipt);
	}		
}
</script>

<style>
	.tab
	{
		border-collapse : collapse;
		font-family: Georgia,Verdana,Helvetica;
	}
	
	.tab th
	{
		background-color : lightgray;
		padding : 5px;
	}

	.tab td
	{
		padding : 5px;
	}
	
	a:link { text-decoration: none; color: #0000FF; background: transparent; }
	a:visited {  text-decoration: none; color: #0000FF; background: transparent; }
	a:hover { text-decoration: underline; color: #0000FF; background: #ffa; }
	a:active { color: #FF0000; background: transparent; }
	
	header
	{
		left: 0;
		top: 0;
		width:100%;
		height: 50px;
		background-color: dodgerblue;
		font-family: "Sierra Madre";
	}
	h1 {
		margin:0; padding:0;
		line-height:50px; 
		width:100%;
		margin:auto; 
		text-align: center;
	}
	h2 {
		background-color: dodgerblue;
		color: white; 
		font-family: "Georgia, Verdana";
		font-size: 100%;
	}
	#container {
	}
</style>
</head>
<header>
    <h1>Niveau des nappes d'eau souterraine</h1>
</header>
<body>

<script language="JavaScript" type="text/javascript">
// 5 piézos à Orléans : piezo.htm?code_dpt=45&code_bss=03635X0545/PZ1,03636X1060/PZ2,03636X1061/PZ3,03636X1062/PZ4,03982X1045/F
/*
$log = fopen('log/piezo.log','at');
ecritLog('************ DEBUT DE SESSION ************');
$browser = $_SERVER['HTTP_USER_AGENT'];
$referrer = $_SERVER['HTTP_REFERER'];
if ($referrer == "") {  $referrer = "Page accédée directement";  }
ecritLog('IP = '.getIp());
ecritLog('Navigateur = '.$browser);
ecritLog('Referrer = '.$referrer);
if (isset($_GET["index_sta"])) { 
	$index_sta = htmlspecialchars($_GET["index_sta"]); 
}
ecritLog('Département = '.$code_dpt);
$couleur = array(1=>'#0000FF','#FF0000','#008000','#A9A9A9','#FFFF00','#00BFFF','#FF6347','#00FF00','#FFA500','#800080','#C71585','#FFC0CB','#00BFFF','#40E0D0','#8B4513','#CD853F','#C72C48','#9E0E40','#91283B','#6E0B14','#850606','#4E1609');
*/

code_dpt = '01';
var f = extractUrlParams();
if (typeof(f['code_dpt']) !== 'undefined') { 
	// il y a un paramètre code_dpt
	code_dpt = f['code_dpt'];
	if (!(code_dpt in dpt)) {
		//ecritLog('Code Département non reconnu : ' + code_dpt + ', transformé en 01');
		code_dpt = '01';
	}
}
npt = 0;
if (typeof(f['code_bss']) !== 'undefined') { 
	// il y a un paramètre code_bss
	//code_bss = decodeURI(f['code_bss']); ne fonctionne pas
	//code_bss = f['code_bss'].replace("%2F", "/"); 
	code_bss = replaceAll("%2F", "/", f['code_bss']).split(','); 
	console.table(code_bss);
	npt = code_bss.length;
	console.log("npt = " + npt);
}	
</script>

<p><TABLE COLS="2" CELLPADDING="6" CELLSPACING="0">
<tr><td>Département :</td><td>Piézomètre :</td></tr>
<tr><td><form name="form1" id="form1">
	<select name="code_dpt" id="code_dpt" onchange="changeDpt();">
	</select>
	&nbsp;&nbsp;
</form></td>

<form name="form2" id="form2">
	<td><select name="code_bss" id="code_bss" onchange="ajoutePiezo();">
		</select>	</td>	</tr>
	<!-- <tr><td><INPUT TYPE=SUBMIT value=Valider></td></tr> !-->
</form>
</p></TABLE>

<p><TABLE id="tableau" COLS="8" BORDER="1" CELLPADDING="3" CELLSPACING="0">
	<tr><th>Code BSS</th><th>Commune</th><th align="right">Nb Mesures</th><th>Début</th><th>Fin</th><th align="right">Niveau mini</th><th align="right">Niveau maxi</th><th>Code entité hydrogéol.</th><th>Action</th></tr>
</TABLE></p>
<p>&nbsp;</p>
<div id="container" style="width:98%; height:560px;"></div>
		
<script language="JavaScript" type="text/javascript">
// *** MAIN SCRIPT ***
// *** 2019-07-18 récupération de toutes les stations piézo TD ***
// Dans Hub'Eau, on ne peut pas interroger les piézomètres par département
// on change de stratégie par rapport au code php : l'URL contiendra le code bss de la station et non pas son index (qui change en fct du temps et qui empêche de bookmarker une station)
// possibilité supplémentaire : 1. on peut afficher plusieurs courbes ; 2. pas de rechargement de page après chgmt dpt ou piezo.
// on stocke toutes les infos dans des tableaux associatifs
	remplitDpt();
	remplitPiezo();
	if (npt > 0) { 
		//ecritLog('Code station = ' + code_bss);
		graphique(1, 'H', "Hauteur");
	}	
/*
ecritLog('************ FIN DE SESSION ************');
fclose($log);	
*/
</script>

<p><i>Quelques chroniques remarquables :
<ul>
<li>Chronique la plus ancienne : <a href="piezo.htm?code_dpt=59&code_bss=00147D0218%2FP1">piézomètre 00147D0218/P1 à Lille</a></li>
<li>Exemple d'une longue série régulière de 1980 à 2019 : <a href="piezo.htm?code_dpt=54&code_bss=01937X0054%2FF">piézomètre 01937X0054/F à Villers-en-Haye</a></li> 
<li>Exemple d'une longue série avec un trou dans les données : <a href="piezo.htm?code_dpt=71&code_bss=05765X0013%2FSONDAG">piézomètre 05765X0013/SONDAG à Vitry-sur-Loire</a></li>
</ul>
</p>
<div id="urlget">
<p>Les mesures piézométriques sont récupérées via <a href="https://hubeau.eaufrance.fr/page/api-piezometrie" target="_blank">l'API "Piézométrie"</a> de <a href="http://hubeau.eaufrance.fr/" target="_blank">Hub'Eau</a>.
<br>URL pour générer directement ce graphique :</p>
</div>
<script>
	urlPage();
</script>
</body>
</html>
